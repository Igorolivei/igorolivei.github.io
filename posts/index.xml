<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Igor Oliveira</title>
        <link>https://igorolivei.github.io/posts/</link>
        <description>Recent content in Posts on Igor Oliveira</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 08 Jun 2019 10:52:14 -0300</lastBuildDate>
        <atom:link href="https://igorolivei.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Da zona de conforto ao aprendizado contínuo</title>
            <link>https://igorolivei.github.io/posts/2019/05/da-zona-de-conforto-ao-aprendizado-cont%C3%ADnuo/</link>
            <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
            
            <guid>https://igorolivei.github.io/posts/2019/05/da-zona-de-conforto-ao-aprendizado-cont%C3%ADnuo/</guid>
            <description>Introdução Na última semana estive no DevOpsDays Porto Alegre apresentando uma palestra com o título &amp;ldquo;Da zona de conforto ao aprendizado contínuo e como as three ways podem te ajudar nesse processo&amp;rdquo;. A motivação para começar a palestrar em eventos parte justamente da minha motivação em sair da minha zona de conforto, uma vez que sempre tive um grande medo de falar em público e, por isso, sempre evitei fazê-lo.</description>
            <content type="html"><![CDATA[

<h2 id="introdução">Introdução</h2>

<p>Na última semana estive no DevOpsDays Porto Alegre apresentando uma palestra com o título <strong>&ldquo;Da zona de conforto ao aprendizado contínuo e como as three ways podem te ajudar nesse processo&rdquo;</strong>. A motivação para começar a palestrar em eventos parte justamente da minha motivação em sair da minha zona de conforto, uma vez que sempre tive um grande medo de falar em público e, por isso, sempre evitei fazê-lo.</p>

<p>A ideia aqui é transcrever mais ou menos o que falei lá e acrescentar mais algumas coisas que vim pensando depois; aproveitando para começar a prática de escrever e compartilhar mais meu conhecimento, e, consequentemente, aprender mais.</p>

<p>Os slides da palestra estão <a href="https://speakerdeck.com/igorolivei/da-zona-de-conforto-ao-aprendizado-continuo" target="_blank">aqui</a>.</p>

<h2 id="a-zona-de-conforto">A zona de conforto</h2>

<p>A zona de conforto é algo que pode estar presente em qualquer área da sua vida, mas minha intenção é focar mais na parte profissional.</p>

<p>Minha motivação em falar mais sobre isso foi uma conversa com um colega que veio me falar que se sente muito estagnado, e gostaria de &ldquo;mudar&rdquo;; daí comecei a falar algumas coisas da minha (curta) experiência e que podem vir a ser úteis para outras pessoas.</p>

<p>A zona de conforto nada mais é do que uma série de pensamentos, atitudes e comportamentos que te fazem se sentir seguro, não te trazem nenhum medo, estresse, ansiedade ou sustos, e que te fazem manter uma rotina e padrão de comportamento; afinal, você não quer que nada mude.</p>

<p>Aproveito pra dizer que estar na zona de conforto não é algo necessariamente ruim, desde que esteja alinhado com seus objetivos (o que não acontece em boa parte dos casos).</p>

<p>Normalmente quando se está na zona de conforto, você não sai do lugar. Fica exatamente realizando as mesmas atividades e consequentemente não evolui. No meu último emprego eu estava assim. Parte por minha culpa, parte por culpa do ambiente em que eu trabalhava mesmo, que não demandava de mim nenhum esforço novo.</p>

<p>Aqui vão alguns motivos pra sair da zona de conforto:</p>

<ul>
<li>A sensação de segurança quando se está na zona de conforto é <strong>falsa</strong>, uma vez que algo pode acontecer (como você ser demitido, por exemplo) e você vai ser forçado a sair da sua zona de conforto, o que geraria um estresse muito maior que resolver sair por conta própria</li>
<li>Quando você sai da zona de conforto sua produtividade aumenta, já que você consegue estudar no seu próprio ritmo</li>
<li>Consequentemente você aprende a lidar com o inesperado, já que está mais acostumado a lidar com coisas novas</li>
<li>Conhecer mais coisas significa ter um aumento na criatividade</li>
<li>Você descobre novos talentos quando aprende mais, e eu sou uma prova disso: no último ano parei de trabalhar com desenvolvimento web e passei a trabalhar como Consultor DevOps, depois de conhecer novas tecnologias que me permitiram entrar mais nessa área</li>
<li><a href="https://epocanegocios.globo.com/Carreira/noticia/2018/10/quer-aprender-algo-novo-saia-da-sua-zona-de-conforto.html" target="_blank">A estabilidade desliga seu cérebro</a></li>
</ul>

<p>Percebi o quão negativo estava sendo para mim estar na zona de conforto depois que resolvi sair do emprego em que estava. Não ter chance e motivação para evoluir (não que a falta de motivação fosse culpa do emprego) foi um dos motivos para ter me demitido, mas não o principal. De toda forma, aí vão alguns sintomas de que você está na zona de conforto (de maneira negativa):</p>

<ul>
<li>Você mantém um desempenho constante, não evolui nem aprende nada novo nunca</li>
<li>Já faz um tempo que você precisou (ou quis mesmo) aprender alguma coisa nova</li>
<li>A ideia de alguma mudança que vá além de trocar de sala sempre te assusta, afinal você não está preparado para isso</li>
<li>Você sempre reclama do seu trabalho, das tarefas que faz, mas não faz absolutamente nada para mudar isso</li>
<li>Acordar de manhã e lembrar que tem que trabalhar é sempre uma tortura (e os finais de semana são um alívio)</li>
<li>Sua rotina não está alinhada com o que você quer para sua vida</li>
</ul>

<h3 id="estou-na-zona-de-conforto-e-agora">Estou na zona de conforto, e agora?</h3>

<p>Só senti mesmo o impacto de estar na zona de conforto quando comecei a procurar um novo emprego. No primeiro momento eu me senti realmente desesperado:</p>

<ul>
<li>A cada vaga nova que eu via tinha vontade de pedir para voltar para o emprego anterior</li>
<li>Não me sentia nem um pouco capaz quando via as qualificações necessárias de cada vaga, tinha a sensação (ou melhor, tinha certeza!) de que não sabia de nada</li>
<li>Nesse momento a <a href="https://pt.wikipedia.org/wiki/S%C3%ADndrome_do_impostor" target="_blank"><strong>síndrome do impostor</strong></a> tende a se intensificar, e eu passei a me questionar como consegui meu emprego anterior, já que depois de mais de 3 anos trabalhando na área, aparentemente, eu não servia para nenhuma outra empresa</li>
<li>Tentei começar a estudar de imediato, mas tinha tanta coisa que eu precisava aprender, que me senti totalmente perdido</li>
<li>Comecei a dar desculpas para mim mesmo, e isso é bem comum. Quem nunca disse que não tinha tempo para estudar, e meia hora depois estava maratonando uma série?</li>
</ul>

<p>Percebi que seria melhor parar um pouco, dar uma respirada, me acalmar e seguir em frente. Aqui você pode:</p>

<ul>
<li><strong>Definir qual seu objetivo</strong>, mesmo que não seja nada tão específico; na época eu resolvi que queria ser um desenvolvedor full stack (minha experiência era basicamente com backend)</li>
<li><strong>Pesquisar o que é necessário para chegar onde quer</strong>, procurar vagas, se basear em alguém que você tem como referência, acompanhar as tendências do mercado, etc; eu tive muito interesse em uma vaga numa empresa que desenvolve ferramentas utilizando realidade aumentada, e comecei a me dedicar no que eles pediam (spoiler: não consegui a vaga)</li>
<li><strong>Criar pequenos objetivos a curto prazo</strong>, porque eles vão te ajudar a ver que é possível sim aprender bem rápido, e isso vai te manter mais motivado</li>
<li><strong>Fazer uma lista de prioridades</strong>; por exemplo: se preciso aprender 3 novas ferramentas (linguagem de programação, banco de dados, etc), quais delas vou precisar mais a curto prazo? Na época eu comecei a estudar mais intensamente frontend, e paralelamente me dediquei a aprender um framework JavaScript do qual eu nunca tinha ouvido falar antes</li>
</ul>

<h2 id="o-aprendizado-contínuo">O aprendizado contínuo</h2>

<p>Decidir sair da zona de conforto não me fez conseguir a vaga que eu tanto queria, mas me fez conseguir ver os benefícios de manter uma rotina de aprendizado contínuo (e ainda me proporcionou um emprego numa empresa excelente e trabalhar com profissionais incríveis).</p>

<p>Antes de tudo, <strong>&ldquo;aprendizado contínuo&rdquo;</strong> é simplesmente manter uma constante atualização e aquisição de conhecimentos. E aqui vão alguns motivos para seguir uma rotina de aprendizado contínuo:</p>

<ul>
<li>É extremamente importante nos dias de hoje, e ainda mais na área de TI, que está em constante atualização</li>
<li>Saber mais significa um aumento na habilidade de resolver problemas; é simples: sabendo mais você tem a capacidade de atuar em tarefas mais variadas</li>
<li>Segundo Jonas Prising, CEO da ManpowerGroup, <a href="https://www.linkedin.com/pulse/job-life-model-dead-heres-what-millennials-need-know-jonas-prising/" target="_blank">&ldquo;o modelo de um emprego para a vida toda está morto&rdquo;</a> (recomendo muito fazer uma pausa para essa leitura)</li>
<li>Uma tendência que vejo é que cada vez mais as empresas buscam por um profissional &ldquo;resolvedor de problemas&rdquo;; ou seja, um profissional que tem a capacidade lógica de - não exatamente resolver qualquer problema, mas ter uma noção do que se trata e saber direcionar para a área ou pessoa certa; isso está bem ligado a capacidade de um profissional &ldquo;T&rdquo;, que tem um conhecimento mais aprofundado numa área específica (a linha vertical do &ldquo;T&rdquo;) e pelo menos um conhecimento básico em diversas outras (a linha horizontal do &ldquo;T&rdquo;)</li>
</ul>

<p>Uma vez que resolver manter uma rotina de aprendizado contínuo, é hora de começar a estudar. Aqui vão algumas dicas:</p>

<ul>
<li><strong>Experimente diversas formas de estudar</strong> e encontre a que se encaixa melhor para você. Eu, por exemplo, não gosto de videoaulas (enquando vejo bastante gente que estuda principalmente assim) porque não consigo me manter focado em vídeos. No meu caso, ler a documentação do que estiver estudando, fazer anotações (no papel mesmo) e exercícios práticos, me ajuda a fixar melhor</li>
<li><strong>Pratique bastante</strong>, essa é a melhor forma de fixar o que aprendeu</li>
<li><strong>Compartilhe seu conhecimento e esteja disposto a ajudar outras pessoas</strong>. Sempre que me disponho a ajudar alguém, pesquiso bastante para garantir que não vou passar nenhuma informação errada, e sempre acabo aprendendo algo novo; tanto com as pesquisas quanto com a pessoa que estou ajudando</li>
<li><strong>Defina metas</strong>. Para mim o ideal é ter uma meta maior, a longo prazo, e outras menores que eu consiga alcançar logo. Aqui dá até para usar alguma metodologia como o <a href="https://rockcontent.com/blog/okr/" target="_blank">OKR</a> ou qualquer outra que você se sinta mais confortável</li>
<li><strong>Crie uma rotina de estudos</strong>. Comece a estudar diariamente ou na frequência que puder. Uma pesquisa revelou que <a href="https://www.spring.org.uk/2009/09/how-long-to-form-a-habit.php" target="_blank">a gente leva em média 66 dias para criar um novo hábito</a> e este realmente fazer parte da nossa rotina</li>
<li><strong>Estude pelo menos um minuto por dia</strong>. Essa é a ideia do <a href="https://iheartintelligence.com/overcome-laziness/" target="_blank">Kaizen e a prática de um minuto diário</a> para evitar a procrastinação. A ideia é que um minuto é muito pouco, então é possível praticar diariamente, e ao mesmo tempo é tão pouco que a gente sempre vai querer passar um pouco mais de tempo</li>
<li><strong>Mantenha o foco no seu objetivo</strong>. Não adianta querer abraçar o mundo, fazer várias coisas ao mesmo tempo e não conseguir se aprofundar em nada</li>
</ul>

<h3 id="as-three-ways-do-devops-e-o-aprendizado-contínuo">As three ways do DevOps e o aprendizado contínuo</h3>

<p>A gente passa basicamente 8 horas por dia, pelo menos 5 dias por semana pensando no como, e agindo para entregar valor aos nossos clientes. Mas muitas vezes negligenciamos o bem valioso que é nosso próprio conhecimento. Da mesma forma que as <a href="https://itrevolution.com/the-three-ways-principles-underpinning-devops/" target="_blank">Three Ways do DevOps</a> nos ajudam a entregar valor para nossos clientes, elas podem nos ajudar a ter uma rotina melhor de estudos.</p>

<p>Aqui vão algumas lições que podemos tirar delas:</p>

<h4 id="first-way-princípio-do-fluxo">First Way: Princípio do fluxo</h4>

<ul>
<li><strong>Visualize o trabalho</strong> - Visualizar o trabalho te ajuda a se planejar melhor, e até a não se esquecer. Gosto de acompanhar minhas tarefas (não só as relacionadas a estudo) com um pequeno <a href="https://blog.runrun.it/o-que-e-kanban/" target="_blank">Kanban</a></li>
<li><strong>Evite muitas mudanças de contexto</strong> - Ficar mudando de tarefas ou se distraindo constamente atrapalha sua concentração. No momento em que estiver estudando tente focar somente nisso. Coloque o celular no silencioso, saia das redes sociais, e evite conversas paralelas</li>
<li><strong>Limite os WIP</strong> (<em>Work in progress</em>) - Quanto mais coisas você estiver estudando paralelamente, maior vai ser o tempo para &ldquo;concluir&rdquo; algo (ou alcançar o nível desejado). Isso é bem relacionado ao item anteior. Tente limitar a uma quantidade que não te atrapalhe. E não existe número mágico, então o ideal é ir experimentando e ajustar da maneira que fique mais confortável para você</li>
</ul>

<h4 id="second-way-feedback-contínuo">Second Way: Feedback contínuo</h4>

<ul>
<li><strong>Pratique e faça auto avaliações constantemente</strong> - Se avaliar é muito necessário, já que essa é a melhor maneira de notar sua evolução. Faça testes e atividades práticas com frequência, ou peça para alguém com mais experiência te ajudar nesse ponto</li>
<li><strong>Se avaliar permite que você encontre seus pontos fracos</strong> - Se avaliar te ajuda a encontrar seus pontos mais fracos, e esses não devem ser ignorados. Pelo contrário, aproveite para focar no que você tem mais dificuldade. Eu, por exemplo, tenho uma certa dificuldade em aprender coisas relacionadas a redes de computadores; então, ao invés de evitar, procuro estar sempre estudando algo sobre isso</li>
<li><strong>Meça sua evolução</strong> - Manter uma visualização do trabalho, como falado anteriormente, também te ajuda a avaliar sua evolução. Com certeza acompanhar de maneira mais visível o quanto você já fez vai te manter motivado</li>
<li><strong>Se encontrar alguma &ldquo;falha&rdquo;, faça um &ldquo;swarming&rdquo;</strong> - É comum que estudando alguma coisa, a gente encontre um ponto relacionado a outro conhecimento que não temos. Nesse momento, o melhor a se fazer é parar um pouco, e entender pelo menos o básico desse outro conhecimento para evitar que isso atrapalhe o avanço dos seus estudos</li>
</ul>

<h4 id="third-way-experimentação-contínua-e-aprendizado">Third Way: Experimentação contínua e aprendizado</h4>

<ul>
<li><strong>Não existe falha, só aprendizado</strong> - Uma coisa que a cultura DevOps nos encoraja muito a praticar é que nossos erros sirvam para aprendizado e melhoria. Quando algo der errado, aprenda com o ocorrido e use isso para melhorar o que estiver fazendo, ao invés de se sentir culpado</li>
<li><strong>Se algo der errado, experimente uma nova maneira de fazer</strong> - Como falei anteriormente em alguns pontos, não existe uma fórmula mágica para como ou o que estudar. Por isso, experimentar novas maneiras de fazer devem ser parte do nosso dia-a-dia. Só assim conseguimos encontrar o que funciona melhor para nós</li>
<li><strong>Repetição e prática são pré-requisitos para dominar qualquer coisa</strong></li>
<li><strong>Se arrisque</strong> - Nunca tenha medo de se arriscar. Pelo contrário: procure fazer isso. Aceite novos desafios e projetos, experimente estudar coisas de outras áreas, e procure sempre coisas novas; afinal, essa prática ajuda nosso cérebro a ter mais facilidade em assimilar novas informações</li>
</ul>

<h2 id="dicas-finais">Dicas finais</h2>

<ul>
<li><strong>Ninguém é melhor que ninguém</strong> - É comum admirarmos pessoas, e acharmos que elas são &ldquo;seres superiores&rdquo;, mas isso não é verdade. É possível sim chegar (e até passar!) ao nível delas. Na maioria das vezes elas só tem mais tempo de experiência ou tiveram mais oportunidades que nós</li>
<li><strong>Nunca é tarde para começar</strong> - Não existe &ldquo;tarde&rdquo; para começar uma mudança. Temos vários exemplos de pessoas que começaram uma faculdade aos 70 ou 80 anos; então não deixe que essa ideia te impeça de começar ou te desmotive</li>
<li><strong>Respeite seu tempo e seu ritmo</strong> - Mais importante de tudo: cada um tem seu ritmo, seus problemas e seu tempo. Manter uma rotina de aprendizado contínuo não deve ser algo exaustivo ou que te cause estresse. Não se cobre demais, e procure sempre manter um equilíbrio entre os estudos e o lazer. Isso é essencial para ter uma boa qualidade de vida!</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Criando um servidor de arquivos e git com Raspberry e Ansible</title>
            <link>https://igorolivei.github.io/posts/2019/06/criando-um-servidor-de-arquivos-e-git-com-raspberry-e-ansible/</link>
            <pubDate>Sat, 08 Jun 2019 10:52:14 -0300</pubDate>
            
            <guid>https://igorolivei.github.io/posts/2019/06/criando-um-servidor-de-arquivos-e-git-com-raspberry-e-ansible/</guid>
            <description>Há muito tempo sou bem atraído pelo Raspberry PI. Um minicomputador com uma capacidade incrível (para seu tamanho), um preço razoável (até no Brasil), e uma infinidade de projetos que podem ter ele como base.
Tendo em mãos:
 Um Raspberry PI 3 Model B Um HD de 500GB um notebook antigo em um case para HD de notebook  E querendo estudar um pouco de Ansible, resolvi fazer um mini servidor de arquivos e git, sendo instalados usando Ansible.</description>
            <content type="html"><![CDATA[

<p><img src="/images/raspberry-stack.png" alt="Raspberry stack" /></p>

<p>Há muito tempo sou bem atraído pelo Raspberry PI. Um minicomputador com uma capacidade incrível (para seu tamanho), um preço razoável (até no Brasil), e uma infinidade de projetos que podem ter ele como base.</p>

<p>Tendo em mãos:</p>

<ul>
<li>Um <strong>Raspberry PI 3 Model B</strong></li>
<li>Um <strong>HD de 500GB</strong> um notebook antigo em um case para HD de notebook</li>
</ul>

<p><img src="/images/raspberry-tools.jpg" alt="Raspberry tools" /></p>

<p>E querendo estudar um pouco de <strong>Ansible</strong>, resolvi fazer um mini servidor de arquivos e git, sendo instalados usando Ansible. Com isso consigo ter um pouco mais de segurança e privacidade nos dados, além de uma fonte de backup disponível mesmo sem internet (ao menos quando eu estiver em casa).</p>

<p>Escolhi para servidor de arquivos o <a href="https://owncloud.org" target="_blank">ownCloud</a>, e para o git o <a href="https://gitea.io" target="_blank">gitea</a>; simplesmente por serem soluções leves, gratuitas e open source.</p>

<h2 id="preparando-o-ambiente">Preparando o ambiente</h2>

<p>No Raspberry instalei o Raspbian Stretch Lite - distro baseada no Debian - na sua versão mais nova, que nada mais é que um Debian 9. As instruções para instalação podem ser encontradas na <a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md" target="_blank">documentação disponível no site do Raspberry</a>. Todos os playbooks foram pensados para funcionarem em distros baseadas no Debian.</p>

<p>Instale o Ansible 2.7+ (na sua máquina, no Raspberry não precisa ;D). Se estiver usando o Debian, Ubuntu, pode seguir <a href="https://linuxconfig.org/how-to-install-ansible-on-ubuntu-18-04-bionic-beaver-linux" target="_blank">esse tutorial</a> (a versão que tem nos repositórios padrão do Ubuntu é um pouco antiga, e vamos precisar de alguns recursos de versões mais novas). Caso esteja usando outra distro, tenho certeza que com uma rápida busca no Google você consegue encontrar como fazer.</p>

<p>O próximo passo é garantir nosso acesso via SSH ao Raspberry.</p>

<p>Primeiramente, acesse a tela de configuração do seu roteador, e descubra qual o IP do seu Raspberry (recomendo fortemente reservar um IP para ele, assim fica garantido que ao reiniciar o roteador, o IP se manterá o mesmo). Vou me referir a esse IP como <code>&lt;RASPBERRY_IP&gt;</code>.</p>

<p><img src="/images/raspberry-reserved-ip.png" alt="Raspberry reserved IP" /></p>

<p>ATENÇÃO: Antes do uso, você provavelmente vai precisar habilitar o ssh no Raspberry usando o menu do <code>raspi-config</code>.</p>

<p>Depois de descobrir o IP do Raspberry, vamos copiar nossa chave ssh para ele (se ainda não tiver uma, crie utilizando o comando <code>ssh-keygen</code>):</p>

<p><code>ssh-copy-id -i ~/.ssh/&lt;SUA_CHAVE&gt;.pub pi@&lt;RASPBERRY_IP&gt;</code></p>

<p>Valide o acesso com o comando:</p>

<p><code>ssh pi@&lt;RASPBERRY_IP</code></p>

<p>O acesso não deve pedir senha.</p>

<p>Ok, já temos o acesso ao Raspberry, agora é hora de colocar a mão na massa! :)</p>

<p>Crie um diretório no seu lugar de preferência onde ficarão os playbooks, e em seguida entre nele:</p>

<p><code>mkdir rpi_ansible</code></p>

<p><code>cd rpi_ansible</code></p>

<p>Todos os playbooks e demais arquivos utilizador podem ser encontrados <a href="https://github.com/Igorolivei/rpi-server-ansible" target="_blank">nesse repositório</a>.</p>

<h2 id="preparando-o-raspberry">Preparando o raspberry</h2>

<p>Para começar as instalações, vamos criar nosso arquivo de inventário.</p>

<p><code>vi inventory.txt</code></p>

<p>Nele vamos definir o host onde vamos fazer nossas instalações e setar algumas variáveis que serão necessárias para os próximos playbooks. O conteúdo do meu arquivo ficou:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-ini" data-lang="ini"><span style="color:#66d9ef">[raspberry_pi:vars]</span>
<span style="color:#a6e22e">ansible_user</span><span style="color:#f92672">=</span><span style="color:#e6db74">pi</span>
<span style="color:#a6e22e">ansible_python_interpreter</span><span style="color:#f92672">=</span><span style="color:#e6db74">/usr/bin/python3</span>

<span style="color:#a6e22e">disk</span><span style="color:#f92672">=</span><span style="color:#e6db74">/dev/sda</span>
<span style="color:#a6e22e">owncloud_db_password</span><span style="color:#f92672">=</span><span style="color:#e6db74">0wnCl0ud</span>
<span style="color:#a6e22e">gitea_db_password</span><span style="color:#f92672">=</span><span style="color:#e6db74">g1te4</span>
<span style="color:#a6e22e">hostname</span><span style="color:#f92672">=</span><span style="color:#e6db74">192.168.15.18</span>

<span style="color:#66d9ef">[raspberry_pi]</span>
<span style="color:#a6e22e">192.168.15.18</span></code></pre></div>
<p>Para sua instalação, mude os valores para os que se adequarem ao seu caso:</p>

<ul>
<li>A variável <code>disk</code> deve receber o caminho do HD que você conectou, você pode descobrir isso executando um <code>lsblk</code> no Raspberry (aqui o HD apareceu como <code>sda</code>, então usarei <code>/dev/sda</code>).</li>
<li>As variáveis que terminam com <code>db_password</code> contém as senhas dos bancos do Gitea e do ownCloud. Se for instalar apenas um dos dois, pode remover a que é relacionada ao outro.</li>
<li>A variável <code>hostname</code> recebe o endereço do seu Raspberry. Pode ser o IP ou um hostname, caso este seja resolvido pela sua máquina (pode fazer o teste com um <code>ping &lt;HOSTNAME&gt;</code>).</li>
</ul>

<p>Se quiser validar o acesso do Ansible, pode criar um playbook para pegar algumas informações:</p>

<p><code>vi validate_conn.yml</code></p>

<p>Com o conteúdo:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">- name: Validate connection
  hosts: raspberry-pi
  become: yes

  tasks:
  - name: Get host info
    debug:
      msg:
        - <span style="color:#e6db74">&#34;My hostname is {{ ansible_hostname }}&#34;</span>
        - <span style="color:#e6db74">&#34;My home is {{ ansible_env.HOME }}&#34;</span></code></pre></div>
<p>Execute com o comando <code>ansible-playbook validate_conn.yml -i inventory.txt</code> e a saída deve ser parecida com:</p>

<pre><code>PLAY [Validate connection] ****************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************
ok: [192.168.15.18]

TASK [Get hostname] ***********************************************************************************************************************************
ok: [192.168.15.18] =&gt; {
    &quot;msg&quot;: [
        &quot;My hostname is pi-server&quot;,
        &quot;My home is /root&quot;
    ]
}

PLAY RECAP ********************************************************************************************************************************************
192.168.15.18              : ok=2    changed=0    unreachable=0    failed=0
</code></pre>

<p>Bom, vamos criar o primeiro playbook. Este vai:</p>

<ul>
<li><strong>Formatar e montar o disco</strong> no caminho <code>/mnt/disk</code>;</li>
<li><strong>Atualizar todos os pacotes</strong> para a versão mais nova, rebootar o Raspberry e aguardar ele voltar para continuar (provavelmente o kernel também vai ser atualizado, e, confie em mim, o reboot vai evitar que vários problemas ocorram);</li>
<li>Instalar o <strong>NGINX</strong>, que utilizaremos para servir os dois serviços, e levar sua configuração;</li>
<li>Instalar o banco de dados <strong>MariaDB</strong> na versão 10.3 (anteriores a 10.2 geravam um bug no Gitea), o <strong>NTP</strong> (para garantir a data e hora no Raspberry);</li>
<li>Instalar o <strong>FirewallD</strong> e garantir que as portas 22, 80 e 443 estejam abertas;</li>
<li>Instalar o pacote <strong>net-tools</strong> (útil para verificar as portas usadas) e mais alguns outros pacotes que foram necessários para a instalação correta do repositório do MariaDB.</li>
</ul>

<p><code>vi prepare_machine.yml</code></p>

<p>Ele ficou com o seguinte conteúdo:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">- name: Prepare machine
  hosts: raspberry_pi
  become: yes

  tasks:
  - name: Create mount dir
    file:
      path: /mnt/disk
      state: directory

  - name: Format volume
    filesystem:
      fstype: ext4
      dev: <span style="color:#e6db74">&#39;{{disk}}&#39;</span>

  - name: Create mountpoint
    mount:
      path: /mnt/disk
      src: <span style="color:#e6db74">&#39;{{disk}}&#39;</span>
      fstype: ext4
      state: mounted

  - name: Upgrade all packages to the latest version
    apt:
      name: <span style="color:#e6db74">&#39;*&#39;</span>
      state: latest
      update_cache: yes
      force_apt_get: <span style="color:#66d9ef">true</span>
    notify:
      - Reboot and wait to continue

  - meta: flush_handlers

  - name: Install packages
    apt:
      name: [dirmngr, apt-transport-https, net-tools, ntp, nginx, firewalld]
      state: present

  - name: Remove default nginx config
    file:
      dest: /etc/nginx/sites-enabled/default
      state: absent

  - name: Set timezone
    timezone:
      name: America/Sao_Paulo

  - name: Ensure NTP is running and enabled as configured.
    service:
      name: ntp
      state: started
      enabled: <span style="color:#66d9ef">true</span>

  - name: Add apt-key from MariaDB
    apt_key:
      keyserver: hkp://keyserver.ubuntu.com:<span style="color:#ae81ff">80</span>
      id: <span style="color:#e6db74">&#39;0xF1656F24C74CD1D8&#39;</span>
      state: present

  - name: Add MariaDB <span style="color:#ae81ff">10.3</span> repository
    apt_repository:
      repo: deb http://sfo1.mirrors.digitalocean.com/mariadb/repo/<span style="color:#ae81ff">10.3</span>/debian/ stretch main
      state: present
      update_cache: yes

  - name: Install MariaDB
    apt:
      name: mariadb-server
      state: present

  - name: Manage firewalld services
    firewalld:
      service: <span style="color:#e6db74">&#39;{{item}}&#39;</span>
      permanent: yes
      state: enabled
      immediate: yes
    with_items:
      - ssh
      - http
      - https

  handlers:
  - name: Reboot and wait to continue
    reboot:
      reboot_timeout: <span style="color:#ae81ff">180</span></code></pre></div>
<p>Agora que nosso playbook está pronto, basta executar:</p>

<p><code>ansible-playbook prepare-machine.yml -i inventory.txt</code></p>

<p>Obs.: Se preferir, pode pular as partes de execução, e executar todos os playbooks de uma vez, como eu ensino lá no final.</p>

<p>Você deve ver uma saída parecida com:</p>

<pre><code>
PLAY [Prepare machine] ********************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************
ok: [192.168.15.18]

TASK [Create mount dir] *******************************************************************************************************************************
changed: [192.168.15.18]

TASK [Format volume] **********************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create mountpoint] ******************************************************************************************************************************
changed: [192.168.15.18]

TASK [Upgrade all packages to the latest version] *****************************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Reboot and wait to continue] *********************************************************************************************************
changed: [192.168.15.18]

TASK [Install packages] *******************************************************************************************************************************
changed: [192.168.15.18]

TASK [Remove default nginx config] ********************************************************************************************************************
changed: [192.168.15.18]

TASK [Set timezone] ***********************************************************************************************************************************
changed: [192.168.15.18]

TASK [Ensure NTP is running and enabled as configured.] ***********************************************************************************************
ok: [192.168.15.18]

TASK [Add apt-key from MariaDB] ***********************************************************************************************************************
changed: [192.168.15.18]

TASK [Add MariaDB 10.3 repository] ********************************************************************************************************************
changed: [192.168.15.18]

TASK [Install MariaDB] ********************************************************************************************************************************
changed: [192.168.15.18]

TASK [Manage firewalld services] **********************************************************************************************************************
ok: [192.168.15.18] =&gt; (item=ssh)
changed: [192.168.15.18] =&gt; (item=http)
changed: [192.168.15.18] =&gt; (item=https)

PLAY RECAP ********************************************************************************************************************************************
192.168.15.18              : ok=14   changed=12   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
</code></pre>

<h2 id="preparando-o-arquivo-de-configuração-do-nginx">Preparando o arquivo de configuração do nginx</h2>

<p>Eu sei que você já está ansioso para instalar as aplicações, mas antes vamos criar o arquivo de configuração do nginx, que será copiado pelos próximos playbooks (sim, ambos contém tasks de copiar, caso você queira usar só uma das aplicações):</p>

<p><code>vi nginx-config.j2</code></p>

<p>Com o conteúdo:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">server {
  listen <span style="color:#ae81ff">80</span>;

  server_name {{hostname}};

  root   /var/www;
  index  index.php index.html;

  <span style="color:#75715e">### Gitea block ###</span>
  location /gitea/ {
    proxy_pass http://localhost:<span style="color:#ae81ff">3000</span>/;
  }
  <span style="color:#75715e">### End Gitea block ###</span>

  <span style="color:#75715e">### ownCloud block ###</span>
  location /owncloud {
    <span style="color:#75715e"># set max upload size</span>
    client_max_body_size 512M;
    fastcgi_buffers <span style="color:#ae81ff">8</span> 4K;                     <span style="color:#75715e"># Please see note 1</span>
    fastcgi_ignore_headers X-Accel-Buffering; <span style="color:#75715e"># Please see note 2</span>

    <span style="color:#75715e"># Disable gzip to avoid the removal of the ETag header</span>
    <span style="color:#75715e"># Enabling gzip would also make your server vulnerable to BREACH</span>
    <span style="color:#75715e"># if no additional measures are done. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332</span>
    gzip off;

    <span style="color:#75715e"># Uncomment if your server is build with the ngx_pagespeed module</span>
    <span style="color:#75715e"># This module is currently not supported.</span>
    <span style="color:#75715e">#pagespeed off;</span>

    error_page <span style="color:#ae81ff">403</span> /owncloud/core/templates/<span style="color:#ae81ff">403.</span>php;
    error_page <span style="color:#ae81ff">404</span> /owncloud/core/templates/<span style="color:#ae81ff">404.</span>php;

    location /owncloud {
      rewrite ^ /owncloud/index.php$uri;
    }

    location ~ ^/owncloud/(?:build|tests|config|lib|3rdparty|templates|data)/ {
      return <span style="color:#ae81ff">404</span>;
    }
    location ~ ^/owncloud/(?:\.|autotest|occ|issue|indie|db_|console) {
      return <span style="color:#ae81ff">404</span>;
    }

    location ~ ^/owncloud/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[<span style="color:#ae81ff">12</span>]|updater/.+|ocs-provider/.+|ocm-provider/.+|core/templates/<span style="color:#ae81ff">40</span>[<span style="color:#ae81ff">34</span>])\.php(?:$|/) {
      fastcgi_split_path_info ^(.+\.php)(/.<span style="color:#75715e">*)$;</span>
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param SCRIPT_NAME $fastcgi_script_name; <span style="color:#75715e"># necessary for owncloud to detect the context root https://github.com/owncloud/core/blob/v10.0.0/lib/private/AppFramework/Http/Request.php#L603</span>
      fastcgi_param PATH_INFO $fastcgi_path_info;
      fastcgi_param modHeadersAvailable <span style="color:#66d9ef">true</span>; <span style="color:#75715e">#Avoid sending the security headers twice</span>
      <span style="color:#75715e"># EXPERIMENTAL: active the following if you need to get rid of the &#39;index.php&#39; in the URLs</span>
      <span style="color:#75715e">#fastcgi_param front_controller_active true;</span>
      fastcgi_read_timeout <span style="color:#ae81ff">180</span>; <span style="color:#75715e"># increase default timeout e.g. for long running carddav/ caldav syncs with 1000+ entries</span>
      fastcgi_pass unix:/run/php/php7.<span style="color:#ae81ff">0</span>-fpm.sock;
      fastcgi_intercept_errors on;
      fastcgi_request_buffering off; <span style="color:#75715e">#Available since NGINX 1.7.11</span>
    }

    location ~ ^/owncloud/(?:updater|ocs-provider|ocm-provider)(?:$|/) {
      try_files $uri $uri/ =<span style="color:#ae81ff">404</span>;
      index index.php;
    }

    <span style="color:#75715e"># Adding the cache control header for js and css files</span>
    <span style="color:#75715e"># Make sure it is BELOW the PHP block</span>
    location ~ /owncloud/.<span style="color:#75715e">*\.(?:css|js)</span> {
      try_files $uri /owncloud/index.php$uri$is_args$args;
      add_header Cache-Control <span style="color:#e6db74">&#34;max-age=15778463&#34;</span> always;

      <span style="color:#75715e"># Add headers to serve security related headers (It is intended to have those duplicated to the ones above)</span>
      <span style="color:#75715e"># The always parameter ensures that the header is set for all responses, including internally generated error responses.</span>
      <span style="color:#75715e"># Before enabling Strict-Transport-Security headers please read into this topic first.</span>
      <span style="color:#75715e"># https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/</span>

      <span style="color:#75715e">#add_header Strict-Transport-Security &#34;max-age=15552000; includeSubDomains; preload&#34; always;</span>
      add_header X-Content-Type-Options nosniff always;
      add_header X-Frame-Options <span style="color:#e6db74">&#34;SAMEORIGIN&#34;</span> always;
      add_header X-XSS-Protection <span style="color:#e6db74">&#34;1; mode=block&#34;</span> always;
      add_header X-Robots-Tag none always;
      add_header X-Download-Options noopen always;
      add_header X-Permitted-Cross-Domain-Policies none always;
      <span style="color:#75715e"># Optional: Don&#39;t log access to assets</span>
      access_log off;
    }

    location ~ /owncloud/.<span style="color:#75715e">*\.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg|map|json)</span> {
      try_files $uri /owncloud/index.php$uri$is_args$args;
      add_header Cache-Control <span style="color:#e6db74">&#34;public, max-age=7200&#34;</span> always;
      <span style="color:#75715e"># Optional: Don&#39;t log access to other assets</span>
      access_log off;
    }
  }
  <span style="color:#75715e">### End ownCloud block ###</span>
}</code></pre></div>
<p>Caso deseje instalar apenas uma das aplicações, pode remover o bloco da outra do arquivo do nginx. Deixei comentado para facilitar a identificação de qual é qual.</p>

<p>Essas configurações foram baseadas nas próprias documentações do <a href="https://docs.gitea.io/pt-br/reverse-proxies/" target="_blank">Gitea</a> e do <a href="https://doc.owncloud.org/server/10.1/admin_manual/installation/nginx_configuration.html" target="_blank">ownCloud</a>.</p>

<ul>
<li>O ownCloud vai poder ser acessado no endereço: <code>http://&lt;RASPBERRY_IP&gt;/owncloud</code></li>
<li>O Gitea vai poder ser acessado no endereço: <code>http://&lt;RASPBERRY_IP&gt;/gitea</code></li>
</ul>

<h2 id="instalando-o-owncloud">Instalando o ownCloud</h2>

<p>Para a instalação do ownCloud, me baseei <a href="https://fuga.cloud/academy/tutorials/deploy-owncloud-with-ansible/" target="_blank">nesse post</a>.</p>

<p>Vamos criar nosso playbook:</p>

<p><code>vi install_owncloud.yml</code></p>

<p>Com o seguinte conteúdo:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">- name: Install ownCloud
  hosts: raspberry_pi
  become: yes

  tasks:
  - name: Create ownCloud dir
    file:
      path: /var/www/owncloud
      state: directory

  - name: Create data dir on disk
    file:
      path: /mnt/disk/owncloud_data
      state: directory
      owner: www-data
      group: www-data

  - name: Create symlink to data dir on mounted disk
    file:
      src: /mnt/disk/owncloud_data
      dest: /var/www/owncloud/data
      state: link
      owner: www-data
      group: www-data

  - name: Install required packages for ownCloud
    apt:
      name: [openssl, php-imagick, php7.<span style="color:#ae81ff">0</span>-common, php7.<span style="color:#ae81ff">0</span>-cgi, php7.<span style="color:#ae81ff">0</span>-curl, php7.<span style="color:#ae81ff">0</span>-fpm, php7.<span style="color:#ae81ff">0</span>-gd, php7.<span style="color:#ae81ff">0</span>-imap, php7.<span style="color:#ae81ff">0</span>-intl, php7.<span style="color:#ae81ff">0</span>-json, php7.<span style="color:#ae81ff">0</span>-ldap, php7.<span style="color:#ae81ff">0</span>-mbstring, php7.<span style="color:#ae81ff">0</span>-mcrypt, php7.<span style="color:#ae81ff">0</span>-mysql, php7.<span style="color:#ae81ff">0</span>-pgsql, php-smbclient, php-ssh2, php7.<span style="color:#ae81ff">0</span>-sqlite3, php7.<span style="color:#ae81ff">0</span>-xml, php7.<span style="color:#ae81ff">0</span>-zip, python3-mysqldb, python3-dev]
      state: present

  - name: Add apt-key from ownCloud
    apt_key:
      url: https://download.owncloud.org/download/repositories/<span style="color:#ae81ff">10.2</span>.<span style="color:#ae81ff">0</span>/Debian_9.<span style="color:#ae81ff">0</span>/Release.key
      state: present

  - name: Add ownCloud repository
    apt_repository:
      repo: deb https://download.owncloud.org/download/repositories/<span style="color:#ae81ff">10.2</span>.<span style="color:#ae81ff">0</span>/Debian_9.<span style="color:#ae81ff">0</span>/ /
      state: present
      update_cache: yes

  - name: Install / Download ownCloud
    apt:
      name: owncloud-files

  - name: Create <span style="color:#e6db74">&#39;owncloud&#39;</span> Database
    mysql_db:
      name: owncloud
      state: present
    notify:
      - Change password of owncloud database user

  - name: Copy owncloud nginx config
    template:
      src: nginx-conf.j2
      dest: /etc/nginx/conf.d/rpi-server
    notify:
      - Enable nginx config
      - Restart nginx

  handlers:
  - name: Change password of owncloud database user
    command: <span style="color:#e6db74">&gt;
</span><span style="color:#e6db74">      mysql -u root --execute=&#34;GRANT ALL ON owncloud.* to &#39;owncloud&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;{{owncloud_db_password}}&#39;; FLUSH PRIVILEGES;&#34;</span>

  - name: Enable nginx config
    file:
      src: /etc/nginx/conf.d/rpi-server
      dest: /etc/nginx/sites-enabled/rpi-server
      state: link
      owner: www-data
      group: www-data

  - name: Restart nginx
    systemd:
      name: nginx
      state: reloaded</code></pre></div>
<p>Esse playbook cria os diretórios, instala pacotes e o owncloud, garante que a configuração do nginx esteja lá, e este seja reiniciado.</p>

<p>Execute a instalação com:</p>

<p><code>ansible-playbook install_owncloud.yml -i inventory.txt</code></p>

<p>Você deverá ver uma saída parecida com:</p>

<pre><code>PLAY [Install ownCloud] *******************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************
ok: [192.168.15.18]

TASK [Create ownCloud dir] ****************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create data dir on disk] ************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create symlink to data dir on mounted disk] *****************************************************************************************************
changed: [192.168.15.18]

TASK [Install required packages for ownCloud] *********************************************************************************************************
changed: [192.168.15.18]

TASK [Add apt-key from ownCloud] **********************************************************************************************************************
changed: [192.168.15.18]

TASK [Add ownCloud repository] ************************************************************************************************************************
changed: [192.168.15.18]

TASK [Install / Download ownCloud] ********************************************************************************************************************
changed: [192.168.15.18]

TASK [Create 'owncloud' Database] *********************************************************************************************************************
changed: [192.168.15.18]

TASK [Copy owncloud nginx config] *********************************************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Change password of owncloud database user] *******************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Enable nginx config] *****************************************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Restart nginx] ***********************************************************************************************************************
changed: [192.168.15.18]

PLAY RECAP ********************************************************************************************************************************************
192.168.15.18              : ok=13   changed=12   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
</code></pre>

<h3 id="concluindo-a-instalação-do-owncloud">Concluindo a instalação do OwnCloud</h3>

<p>Após instalar, abra seu navegador e acesse <code>http://&lt;RASPBERRY_IP&gt;/owncloud</code>. Estamos nos últimos passos da configuração do ownCloud. Vamos preencher os campos:</p>

<ul>
<li>Defina um usuário administrador e sua senha</li>
<li>Logo abaixo, em &ldquo;Armazenamento e Banco de Dados&rdquo;, selecione <code>MySQL/MariaDB</code> e preencha os dados necessários:

<ul>
<li>Usuário: <code>owncloud</code></li>
<li>Senha: A que você definiu para o banco do ownCloud (no inventory.txt que coloquei acima era <code>0wnCl0ud</code>)</li>
<li>Database: <code>owncloud</code></li>
<li>Clique em <code>Concluir configuração</code> e pronto!</li>
</ul></li>
</ul>

<p>Seu servidor de arquivos está pronto para uso! :)</p>

<h2 id="instalando-o-gitea">Instalando o Gitea</h2>

<p>Para a instalação do Gitea, me baseei <a href="https://www.vultr.com/docs/how-to-install-gitea-on-debian-9" target="_blank">nesse tutorial de instalação</a>.</p>

<p>Para começar, vamos criar o template do arquivo de serviço do Gitea (relaxa, o Ansible lida com o resto):</p>

<p><code>vi gitea-service.j2</code></p>

<p>Com o conteúdo:</p>

<pre><code>[Unit]
Description=Gitea (Git with a cup of tea)
After=syslog.target
After=network.target
After=mariadb.service

[Service]
# Modify these two values and uncomment them if you have
# repos with lots of files and get an HTTP error 500 because
# of that
###
#LimitMEMLOCK=infinity
#LimitNOFILE=65535
RestartSec=2s
Type=simple
User=gitea
Group=gitea
WorkingDirectory=/var/lib/gitea/
ExecStart=/usr/local/bin/gitea web -c /etc/gitea/app.ini
Restart=always
Environment=USER=gitea HOME=/home/gitea GITEA_WORK_DIR=/var/lib/gitea
# If you want to bind Gitea to a port below 1024 uncomment
# the two values below
###
#CapabilityBoundingSet=CAP_NET_BIND_SERVICE
#AmbientCapabilities=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
</code></pre>

<p>Agora vamos ao playbook:</p>

<p><code>vi install_gitea.yml</code></p>

<p>O conteúdo do playbook ficou:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">- name: Install gitea
  hosts: raspberry_pi
  become: yes

  tasks:
  - name: create gitea group
    group:
      name: gitea
      state: present

  - name: create gitea user
    user:
      name: gitea
      group: gitea
      home: /home/gitea
      comment: Gitea
      system: yes
      shell: /bin/bash

  - name: Create gitea dir on disk
    file:
      path: <span style="color:#e6db74">&#39;{{ item }}&#39;</span>
      state: directory
      owner: gitea
      group: gitea
      mode: <span style="color:#ae81ff">0750</span>
    with_items:
      - /mnt/disk/gitea_repositories
      - /mnt/disk/gitea_lfs

  - name: Create gitea etc dir
    file:
      path: /etc/gitea
      state: directory
      owner: root
      group: gitea
      mode: <span style="color:#ae81ff">0770</span>

  - name: Create gitea directories
    file:
      path: <span style="color:#e6db74">&#39;{{ item }}&#39;</span>
      state: directory
      owner: gitea
      group: gitea
    with_items:
      - /var/lib/gitea/custom
      - /var/lib/gitea/public

  - name: Create gitea <span style="color:#ae81ff">0750</span> directories
    file:
      path: <span style="color:#e6db74">&#39;{{ item }}&#39;</span>
      state: directory
      owner: gitea
      group: gitea
      mode: <span style="color:#ae81ff">0750</span>
    with_items:
      - /var/lib/gitea/indexers
      - /var/lib/gitea/log
      - /var/lib/gitea/data

  - name: Create symlink of repositories to data dir on mounted disk
    file:
      src: /mnt/disk/gitea_repositories
      dest: /var/lib/gitea/data/repositories
      state: link
      owner: gitea
      group: gitea

  - name: Create symlink of lfs to data dir on mounted disk
    file:
      src: /mnt/disk/gitea_lfs
      dest: /var/lib/gitea/data/lfs
      state: link
      owner: gitea
      group: gitea

  - name: Install git
    apt:
      name: git
      state: present

  - name: Create <span style="color:#e6db74">&#39;gitea&#39;</span> Database
    mysql_db:
      name: gitea
      state: present
    notify:
      - Change password of gitea database user

  - name: Download gitea binary
    get_url:
      url: https://dl.gitea.io/gitea/<span style="color:#ae81ff">1.7</span>.<span style="color:#ae81ff">6</span>/gitea-<span style="color:#ae81ff">1.7</span>.<span style="color:#ae81ff">6</span>-linux-arm-<span style="color:#ae81ff">7</span>
      dest: /usr/local/bin/gitea
      owner: gitea
      group: gitea
      mode: <span style="color:#ae81ff">0755</span>

  - name: Copy gitea service file
    template:
      src: gitea-service.j2
      dest: /etc/systemd/system/gitea.service
    notify:
      - Start service gitea
      - Add first lines to app.ini

  - name: Copy gitea nginx config
    template:
      src: nginx-conf.j2
      dest: /etc/nginx/conf.d/rpi-server
    notify:
      - Enable nginx config
      - Restart nginx

  handlers:
  - name: Change password of gitea database user
    command: <span style="color:#e6db74">&gt;
</span><span style="color:#e6db74">      mysql -u root --execute=&#34;GRANT ALL ON gitea.* TO &#39;gitea&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;{{gitea_db_password}}&#39; WITH GRANT OPTION; FLUSH PRIVILEGES;&#34;</span>

  - name: Start service gitea
    systemd:
      name: gitea
      state: restarted
      daemon_reload: yes
      enabled: yes

  - name: Add first lines to app.ini
    lineinfile:
      path: /etc/gitea/app.ini
      line: <span style="color:#e6db74">&#39;{{item}}&#39;</span>
    with_items:
      - <span style="color:#e6db74">&#39;[server]&#39;</span>
      - <span style="color:#e6db74">&#39;ROOT_URL=http://{{hostname}}/gitea/&#39;</span>
      - <span style="color:#e6db74">&#39;LFS_CONTENT_PATH=/var/lib/gitea/data/lfs&#39;</span>
      - <span style="color:#e6db74">&#39;[repository]&#39;</span>
      - <span style="color:#e6db74">&#39;ROOT=/var/lib/gitea/data/repositories&#39;</span>
    notify:
      - Start service gitea

  - name: Enable nginx config
    file:
      src: /etc/nginx/conf.d/rpi-server
      dest: /etc/nginx/sites-enabled/rpi-server
      state: link
      owner: www-data
      group: www-data

  - name: Restart nginx
    systemd:
      name: nginx
      state: reloaded</code></pre></div>
<p>Execute com o comando:</p>

<p><code>ansible-playbook install-gitea.yml -i inventory.yml</code></p>

<p>E a saída deve ser algo parecido com:</p>

<pre><code>PLAY [Install gitea] **********************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************
ok: [192.168.15.18]

TASK [create gitea group] *****************************************************************************************************************************
changed: [192.168.15.18]

TASK [create gitea user] ******************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create gitea dir on disk] ***********************************************************************************************************************
changed: [192.168.15.18] =&gt; (item=/mnt/disk/gitea_repositories)
changed: [192.168.15.18] =&gt; (item=/mnt/disk/gitea_lfs)

TASK [Create gitea etc dir] ***************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create gitea directories] ***********************************************************************************************************************
changed: [192.168.15.18] =&gt; (item=/var/lib/gitea/custom)
changed: [192.168.15.18] =&gt; (item=/var/lib/gitea/public)

TASK [Create gitea 0750 directories] ******************************************************************************************************************
changed: [192.168.15.18] =&gt; (item=/var/lib/gitea/indexers)
changed: [192.168.15.18] =&gt; (item=/var/lib/gitea/log)
changed: [192.168.15.18] =&gt; (item=/var/lib/gitea/data)

TASK [Create symlink of repositories to data dir on mounted disk] *************************************************************************************
changed: [192.168.15.18]

TASK [Create symlink of lfs to data dir on mounted disk] **********************************************************************************************
changed: [192.168.15.18]

TASK [Install git] ************************************************************************************************************************************
changed: [192.168.15.18]

TASK [Create 'gitea' Database] ************************************************************************************************************************
changed: [192.168.15.18]

TASK [Download gitea binary] **************************************************************************************************************************
changed: [192.168.15.18]

TASK [Copy gitea service file] ************************************************************************************************************************
changed: [192.168.15.18]

TASK [Copy gitea nginx config] ************************************************************************************************************************
ok: [192.168.15.18]

RUNNING HANDLER [Change password of gitea database user] **********************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Start service gitea] *****************************************************************************************************************
changed: [192.168.15.18]

RUNNING HANDLER [Add first lines to app.ini] **********************************************************************************************************
changed: [192.168.15.18] =&gt; (item=[server])
changed: [192.168.15.18] =&gt; (item=ROOT_URL=http://192.168.15.18/gitea/)
changed: [192.168.15.18] =&gt; (item=LFS_CONTENT_PATH=/var/lib/gitea/data/lfs)
changed: [192.168.15.18] =&gt; (item=[repository])
changed: [192.168.15.18] =&gt; (item=ROOT=/var/lib/gitea/data/repositories)

RUNNING HANDLER [Start service gitea] *****************************************************************************************************************
changed: [192.168.15.18]

PLAY RECAP ********************************************************************************************************************************************
192.168.15.18              : ok=18   changed=16   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
</code></pre>

<h3 id="concluindo-a-instalação-do-gitea">Concluindo a instalação do Gitea</h3>

<p>Para concluir a instalação, acesse <code>http://&lt;RASPBERRY_IP&gt;/gitea/install</code>, e preencha os campos necessários:</p>

<ul>
<li>Configure a conexão ao banco:

<ul>
<li>Senha: A senha definida no inventory.txt (no exemplo dado, utilizei <code>g1te4</code>)</li>
</ul></li>
<li>Opcionalmente crie uma conta de administrador; do contrário, a conta utilizada de administrador será a primeira conta que for criada</li>
<li>Clique em &ldquo;Instalar Gitea&rdquo;, e pronto!</li>
</ul>

<p>Servidor git pronto para uso! :)</p>

<h2 id="executando-todos-os-playbooks-de-uma-vez">Executando todos os playbooks de uma vez</h2>

<p>Se preferir, pode criar todos os arquivos e playbooks, e executar com <code>ansible-playbook prepare-machine.yml install_owncloud.yml install_gitea.yml -i inventory.txt</code>.</p>

<h2 id="resultado">Resultado</h2>

<p>Aqui está meu projetinho pronto (sim, eu sei que preciso de um case pro Raspberry, e eu sei que é meio irônico usar uma caixa de Orange PI como case temporário [O Orange PI vai ser outro projeto]):</p>

<p><img src="/images/raspberry-done.jpg" alt="Raspberry done" /></p>

<p>Só lembrando que tudo foi pensado para um uso pessoal, e o Raspberry de maneira nenhuma vai servir como um servidor de produção.</p>

<p>Lembrando também que agradeço qualquer dica ou sugestão, principalmente relacionadas aos playbooks, já que estes foram os meus primeiros.</p>
]]></content>
        </item>
        
    </channel>
</rss>
